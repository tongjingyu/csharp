<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAAAAACoEAAAJgAAABAQAAAAAAAAaAQAAM4QAAAoAAAAIAAAAEAAAAABACAAAAAAAIAQ
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOzs7Mjs7O+g7OzvMOzs7mTs7
        O2Y7OzszOzs7BgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7OzvoOzs7/zs7
        O/87Ozv/Ozs7/zs7O/87Ozv5Ozs7yTs7OyEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs7
        O8w7Ozv/Ozs7/zs7O/87Ozv/Ozs7/zs7O/w7OzteAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAOzs7mjs7O/87Ozv/Ozs7/zs7O/87Ozv8Ozs7XgAAAAA7OzsDOzs7oTs7O347OzsBAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA7OztlOzs7/zs7O/87Ozv/Ozs7/Ds7O14AAAAAAAAAADs7Ow47Ozv1Ozs7/zs7
        O5A7OzsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADs7OzM7Ozv/Ozs7/zs7O/w7OzteAAAAAAAAAAAAAAAAAAAAADs7
        O0k7Ozv4Ozs7/zs7O5E7OzsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOzs7Bjs7O/k7Ozv8Ozs7XgAAAAAAAAAAOzs7qjs7
        O8U7OzsVAAAAADs7O0k7Ozv4Ozs7/zs7O5E7OzsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOzs7yDs7O14AAAAAAAAAAAAA
        AAA7OzvGOzs7/zs7O9Q7OzsVAAAAADs7O0k7Ozv4Ozs7/zs7O5E7OzsBAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7OzshAAAAADs7
        OwM7OzsPAAAAADs7OxU7OzvUOzs7/zs7O9Q7OzsVAAAAADs7O0k7Ozv4Ozs7/zs7O5E7OzsBAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAOzs7oDs7O/Y7OztJAAAAADs7OxU7OzvUOzs7/zs7O9Q7OzsVAAAAADs7O0g7Ozv4Ozs7/zs7
        O5E7OzsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA7Ozt9Ozs7/zs7O/g7OztJAAAAADs7OxU7OzvUOzs7/zs7O9Q7OzsVAAAAADs7
        O0g7Ozv4Ozs7/zs7O5E7OzsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADs7OwE7OzuROzs7/zs7O/g7OztJAAAAADs7OxU7OzvUOzs7/zs7
        O9Q7OzsVAAAAADs7O0g7Ozv4Ozs7/zs7O5E7OzsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs7OwE7OzuROzs7/zs7O/g7OztJAAAAADs7
        OxU7OzvUOzs7/zs7O9Q7OzsVAAAAADs7O0g7Ozv4Ozs7/zs7O5E7OzsBAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs7OwE7OzuROzs7/zs7
        O/g7OztJAAAAADs7OxU7OzvUOzs7/zs7O9Q7OzsWAAAAADs7O0g7Ozv4Ozs7/zs7O30AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs7
        OwE7OzuROzs7/zs7O/g7OztJAAAAADs7OxU7OzvUOzs7/zs7O9Q7OzsWAAAAADs7O0g7Ozv2Ozs7oAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADs7OwE7OzuROzs7/zs7O/g7OztJAAAAADs7OxU7OzvUOzs7/zs7O9Q7OzsWAAAAADs7
        Ow47OzsDAAAAADs7OzY7OzsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADs7OwE7OzuROzs7/zs7O/g7OztJAAAAADs7OxU7OzvUOzs7/zs7
        O8cAAAAAAAAAAAAAAAA7OzteOzs7/Ds7O5E7OzsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs7OwE7OzuROzs7/zs7O/g7OztJAAAAADs7
        OxU7OzvFOzs7qQAAAAAAAAAAOzs7Xjs7O/w7Ozv/Ozs7/zs7O5E7OzsBAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs7OwE7OzuROzs7/zs7
        O/g7OztJAAAAAAAAAAAAAAAAAAAAADs7O147Ozv8Ozs7/zs7O/87Ozv/Ozs7/zs7O4MAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs7
        OwE7OzuROzs7/zs7O/U7OzsOAAAAAAAAAAA7OzteOzs7/Ds7O/87Ozv/Ozs7/zs7O/87Ozv/Ozs7+QAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADs7OwE7Ozt/Ozs7oDs7OwMAAAAAOzs7Xzs7O/w7Ozv/Ozs7/zs7O/87Ozv/Ozs7/zs7
        O/87OzvfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs7O187Ozv8Ozs7/zs7O/87Ozv/Ozs7/zs7
        O/87Ozv/Ozs77Ts7OzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7Ozs2Ozs7/Ds7O/87Ozv/Ozs7/zs7
        O/87Ozv/Ozs7/zs7O+07OzsyAAAAAAAAAAAAAAAAAAAAAAAAABkiIiK2EBAQ+gUFBf8rKyv6dnZ2sP//
        /wYAAAAAAAAAAAAAAAD///8Fd3d3sCsrK/oFBQX/EBAQ+iIiIrYAAAAaAAAAADs7OwE7OzuROzs7/zs7
        O/87Ozv/Ozs7/zs7O/87OzvtOzs7MgAAAAAAAAAAAAAAAAAAAAAAAAAcCQkJ6gcHB/9wcHD/mJiY/2Nj
        Y/8DAwP/YGBg1gAAAP8AAAAAAAAA/1xcXNEDAwP/Y2Nj/5iYmP9wcHD/BwcH/wYGBuwAAAAfAAAAADs7
        OwE7OzuROzs7/zs7O/87Ozv/Ozs77Ts7OzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKgFBQX+y8vL////
        /////////////7S0tP8CAgL/AAAA/wAAAAAAAAD/AgIC/7Ozs//////////////////Ly8v/BQUF/gAA
        AKgAAAAAAAAAADs7OwE7OzuFOzs7/Ds7O9o7OzsxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAQEB+VNT
        U////////////////////////////zc3N/8AAAD/AAAAAAAAAP82Njb/////////////////////////
        //9TU1P/AQEB+QAAAAIAAAAAAAAAAAAAAAA7OzsIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAoAAAD/ZmZm////////////////////////////SUlJ/0VFRcYAAAAARUVFxkpKSv//////////////
        /////////////2dnZ/8AAAD/AAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD/AAAA/wAAANsaGhr5+Pj4/////////////////+3t7f8QEBD/AAAA/wAAAP8AAAD/Dw8P/+zs
        7P/////////////////4+Pj/Ghoa+QAAANsAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAP8AAAD/AAAAYwAAAP9JSUn+3Nzc///////S0tL/Nzc3/xUVFfUAAAAKAAAAAAAA
        AAoUFBTzNzc3/9HR0f//////29vb/0lJSf4AAAD/AAAAYwAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfgEBAfwAAAD/AwMD/wAAAP8VFRXsFhYWLQAA
        AAAAAAAAAAAAABYWFi0VFRXsAAAA/wMDA/8AAAD/AQEB/AAAAH4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAGoAAAB6AAAATQAA
        AAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAABNAAAAegAAAGoAAAAhAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPwH///8Af///AP///wEP//8DB///B4P//wx
        B//+cIP//pBB//+IIP//hBB//4IIP//BBB//4IIf//BBH//4IJP//BDh//4IwP//B4D//4MA///CAP//
        /AD///gB4DgIA8AQBAfAEAYPgBADv4AQA/8AAAH/ABAB/+A4D//wfB//KAAAABAAAAAgAAAAAQAgAAAA
        AABABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs7O0c7OzvtOzs7vzs7O407Ozs7AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7OztZOzs7/zs7O/87OzvVOzs7GDs7
        O0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOzs7Jjs7O/87OzvVOzs7Fzs7
        OwQ7OzvOOzs7iAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs7OwI7OzvHOzs7Fzs7
        O1c7OzurOzs7GDs7O847OzuJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOzs7CDs7
        O2Q7OzsYOzs7rjs7O687OzsYOzs7zjs7O4kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA7OzuBOzs7zjs7Oxg7OzuuOzs7rzs7Oxg7OzvOOzs7iQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADs7O4k7OzvOOzs7GDs7O647OzuvOzs7GDs7O847OzuDAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAOzs7iDs7O847OzsYOzs7rjs7O687OzsYOzs7ZDs7Ow4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7OzuIOzs7zjs7Oxg7OzupOzs7VTs7Oxc7OzvWOzs7iQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs7O4g7OzvOOzs7BDs7Oxc7OzvWOzs7/zs7
        O/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOzs7SDs7Oxg7OzvWOzs7/zs7
        O/87Ozv7AAAAAAAAABYmJibXJCQk/Tg4OPQ8PDxxAAAAADw8PHE3Nzf0JCQk/SMjI9k1NTV8Ozs7/zs7
        O/87Ozv6Ozs7VAAAAAATExO4lJSU/v/////U1NT/ExMT+QAAAAATExP51NTU//////+UlJT+ExMTuDs7
        O4U7OzvzOzs7UwAAAAAAAAAADAwM6vb29v///////////0BAQPoAAAAAPz8/+v//////////9vb2/wwM
        DOoAAAAAAAAAAAAAAAAAAAAAAAAA/wICAvShoaH6/////+Dg4P8jIyPuAAAAmSIiIu7g4OD//////6Ki
        ovoCAgL0AAAA/wAAAAAAAAAAAAAAAAAAADMAAABCEBAQ2yAgIPMhISHqQ0NDOAAAAABDQ0M4ISEh6iAg
        IPMQEBDbAAAAQgAAADMAAAAAAAAAAAAAAADg/wAA4H8AAOA/AADgHwAA8A8AAPgHAAD8AwAA/gEAAP8A
        AAD/gAAA/8AAAIIAAACCAQAAgg8AAAAHAAACBwAA
</value>
  </data>
</root>